{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "prac-data-factory"
		},
		"AzureBlobStorage_linkedServ_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage_linkedServ'"
		},
		"AzureSqlServer_linkedServ_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlServer_linkedServ'"
		},
		"SqlServer_local_linkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer_local_linkedService'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_linkedServ')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_linkedServ_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime-selfHosted')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "This integration runtime is configured to execute workloads using my own PC resources.",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_Incremental_Copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_linkedServ",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Incremental_Load_datasets/Incremental_Copy1_datasets"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "out",
						"container": "con1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_linkedServ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAAC_file_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_linkedServ",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "new_task"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SAAC.txt",
						"folderPath": "inp",
						"container": "con1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_linkedServ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_Incremental_Copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_linkedServ",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Incremental_Load_datasets/Incremental_Copy1_datasets"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "inp",
						"container": "con1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_linkedServ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/op_dataset_avro')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_linkedServ",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderName_AvroOpDataset": {
						"type": "string"
					},
					"fileName_AvroOpDataset": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADF100_datasets/1-copy_data_pipeline_datasets"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName_AvroOpDataset",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderName_AvroOpDataset",
							"type": "Expression"
						},
						"container": "con1"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_linkedServ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/op_dataset_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_linkedServ",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderName_inCSVOutputDataset": {
						"type": "String"
					},
					"fileName_inCSVOutputDataset": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ADF100_datasets/1-copy_data_pipeline_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName_inCSVOutputDataset",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderName_inCSVOutputDataset",
							"type": "Expression"
						},
						"container": "con1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_linkedServ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/op_dataset_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_linkedServ",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderName_parquetOpDataset": {
						"type": "string"
					},
					"fileName_parquetOpDataset": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADF100_datasets/1-copy_data_pipeline_datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName_parquetOpDataset",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderName_parquetOpDataset",
							"type": "Expression"
						},
						"container": "con1"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_linkedServ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlServer_linkedServ')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is a connector to the Azure Sql Server resource created by me on my Azure student account.",
				"parameters": {
					"dbName_linkedServ": {
						"type": "string",
						"defaultValue": "pracDB"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlServer_linkedServ_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime-selfHosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-selfHosted')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_local_linkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SQL server linked service using self-hosted integration runtime.",
				"parameters": {
					"linkedServicedbName": {
						"type": "String",
						"defaultValue": "prac"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer_local_linkedService_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime-selfHosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-selfHosted')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/watermark_dataset_csv_op')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_linkedServ",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Incremental_Load_datasets/Incremental_Copy2_watermark_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@utcnow()",
							"type": "Expression"
						},
						"folderPath": "watermark",
						"container": "con1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_linkedServ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Incremental_Copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data activity using Copy Data Tool",
				"activities": [
					{
						"name": "Incremental_Copy_Activity",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "con1/inp/*.txt"
							},
							{
								"name": "Destination",
								"value": "con1/out/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@pipeline().parameters.windowStart",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@pipeline().parameters.windowEnd",
										"type": "Expression"
									},
									"wildcardFolderPath": "inp",
									"wildcardFileName": "*.txt",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_Incremental_Copy1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_Incremental_Copy1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Incremental_Load"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_Incremental_Copy1')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_Incremental_Copy1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/task_pipeline_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetInfoaboutSAACFile",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SAAC_file_dataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists",
								"itemName",
								"itemType",
								"lastModified",
								"size"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "new_task_pipeline_folder"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SAAC_file_dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlServer_dataset_101_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlServer_linkedServ",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName_linkedServ": {
							"value": "@dataset().dbName_ofDataset",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"dbName_ofDataset": {
						"type": "string"
					},
					"schemaName_ofDataset": {
						"type": "string"
					},
					"tableName_ofDataset": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADF101_datasets/1-load_data_from_localserver_to_azureDB_pipeline_datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName_ofDataset",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName_ofDataset",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlServer_linkedServ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerDataset_local_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer_local_linkedService",
					"type": "LinkedServiceReference",
					"parameters": {
						"linkedServicedbName": {
							"value": "@dataset().dbName_dataset",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"dbName_dataset": {
						"type": "string"
					},
					"schemaName_dataset": {
						"type": "string"
					},
					"tableName_dataset": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADF100_datasets/2-copy_all_tables_DB_to_DB_pipeline_datasets"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName_dataset",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName_dataset",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer_local_linkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerLocal_dataset_101_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dataset that connects to local SQL Server of DEBANJAN, and is used in ADF101 pipeline 1",
				"linkedServiceName": {
					"referenceName": "SqlServer_local_linkedService",
					"type": "LinkedServiceReference",
					"parameters": {
						"linkedServicedbName": {
							"value": "@dataset().dbName_odDataset",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"dbName_odDataset": {
						"type": "string"
					},
					"schemaName_ofDataset": {
						"type": "string"
					},
					"tableName_ofDataset": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADF101_datasets/1-load_data_from_localserver_to_azureDB_pipeline_datasets"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName_ofDataset",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName_ofDataset",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer_local_linkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ip_dataset_sqlserver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer_local_linkedService",
					"type": "LinkedServiceReference",
					"parameters": {
						"linkedServicedbName": {
							"value": "@dataset().dbNameDataset",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"dbNameDataset": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADF100_datasets/1-copy_data_pipeline_datasets"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblProducts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer_local_linkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/watermark_dataset_tbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer_local_linkedService",
					"type": "LinkedServiceReference",
					"parameters": {
						"linkedServicedbName": {
							"value": "@dataset().dbName_inDataset",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"schemaName_inDataset": {
						"type": "string",
						"defaultValue": "increment"
					},
					"tableName_inDataset": {
						"type": "string"
					},
					"dbName_inDataset": {
						"type": "string",
						"defaultValue": "azureDB"
					}
				},
				"folder": {
					"name": "Incremental_Load_datasets/Incremental_Copy2_watermark_datasets"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName_inDataset",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName_inDataset",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer_local_linkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-copy_data_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data to CSV format",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ip_dataset_sqlserver",
								"type": "DatasetReference",
								"parameters": {
									"dbNameDataset": {
										"value": "@pipeline().parameters.dbNamePipeline",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "op_dataset_csv",
								"type": "DatasetReference",
								"parameters": {
									"folderName_inCSVOutputDataset": {
										"value": "@pipeline().parameters.CSVFolderName",
										"type": "Expression"
									},
									"fileName_inCSVOutputDataset": {
										"value": "@pipeline().parameters.CSVFileName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data to AVRO format",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data to CSV format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AvroSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "AvroWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ip_dataset_sqlserver",
								"type": "DatasetReference",
								"parameters": {
									"dbNameDataset": {
										"value": "@pipeline().parameters.dbNamePipeline",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "op_dataset_avro",
								"type": "DatasetReference",
								"parameters": {
									"folderName_AvroOpDataset": {
										"value": "@pipeline().parameters.AvroFolderName",
										"type": "Expression"
									},
									"fileName_AvroOpDataset": {
										"value": "@pipeline().parameters.AvroFileName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data to Parquet format",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data to AVRO format",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ip_dataset_sqlserver",
								"type": "DatasetReference",
								"parameters": {
									"dbNameDataset": {
										"value": "@pipeline().parameters.dbNamePipeline",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "op_dataset_parquet",
								"type": "DatasetReference",
								"parameters": {
									"folderName_parquetOpDataset": {
										"value": "@pipeline().parameters.ParquestFolderName",
										"type": "Expression"
									},
									"fileName_parquetOpDataset": {
										"value": "@pipeline().parameters.ParquestFileName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"dbNamePipeline": {
						"type": "string"
					},
					"CSVFolderName": {
						"type": "string"
					},
					"CSVFileName": {
						"type": "string"
					},
					"AvroFolderName": {
						"type": "string"
					},
					"AvroFileName": {
						"type": "string"
					},
					"ParquestFolderName": {
						"type": "string"
					},
					"ParquestFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADF100"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-23T09:56:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ip_dataset_sqlserver')]",
				"[concat(variables('factoryId'), '/datasets/op_dataset_csv')]",
				"[concat(variables('factoryId'), '/datasets/op_dataset_avro')]",
				"[concat(variables('factoryId'), '/datasets/op_dataset_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-load_data_from_localserver_to_azureDB_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will extract data from sql server in localhost and load it to Azure SQL Server resource database.",
				"activities": [
					{
						"name": "CopyDataFromLocaltoAzureDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerLocal_dataset_101_1",
								"type": "DatasetReference",
								"parameters": {
									"dbName_odDataset": {
										"value": "@pipeline().parameters.fromDB",
										"type": "Expression"
									},
									"schemaName_ofDataset": {
										"value": "@pipeline().parameters.fromSchema",
										"type": "Expression"
									},
									"tableName_ofDataset": {
										"value": "@pipeline().parameters.fromTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlServer_dataset_101_1",
								"type": "DatasetReference",
								"parameters": {
									"dbName_ofDataset": {
										"value": "@pipeline().parameters.toDB",
										"type": "Expression"
									},
									"schemaName_ofDataset": {
										"value": "@pipeline().parameters.toSchema",
										"type": "Expression"
									},
									"tableName_ofDataset": {
										"value": "@pipeline().parameters.toTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"fromDB": {
						"type": "string",
						"defaultValue": "test_db"
					},
					"toDB": {
						"type": "string",
						"defaultValue": "pracDB"
					},
					"fromSchema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"fromTable": {
						"type": "string",
						"defaultValue": "tblProducts"
					},
					"toSchema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"toTable": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADF101"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-23T11:43:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerLocal_dataset_101_1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlServer_dataset_101_1')]"
			]
		}
	]
}